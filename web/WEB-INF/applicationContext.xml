<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.0.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    <context:property-placeholder location="classpath:db.properties"/>
    <context:component-scan base-package="com.lhb.dao"/>
    <context:component-scan base-package="com.lhb.service"/>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${db.driver}" />
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" />
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" lazy-init="false">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
        <property name="mappingLocations" value="classpath:com/lhb/entity/*.hbm.xml"></property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <!--&lt;!&ndash;事物一&ndash;&gt;-->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="*" propagation="REQUIRED" isolation="DEFAULT"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!--<aop:config>-->
        <!--<aop:pointcut expression="execution(* com.lhb.service.impl.UserServiceImpl.*(..))" id="txPointcut"/>-->
        <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>-->
    <!--</aop:config>-->

    <!--事物二-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--&lt;!&ndash;Aop方法三&ndash;&gt;-->
    <!--<bean id="myAspect" class="com.lhb.aop.MyAspect" />-->
    <!--<aop:config>-->
        <!--<aop:pointcut id="txp1" expression="execution(* com.lhb.service.impl.UserServiceImpl.*(..))"/>-->
        <!--<aop:advisor advice-ref="myAspect" pointcut-ref="txp1"/>-->
    <!--</aop:config>-->

    <!--Aop方法二-->
    <context:component-scan base-package="com.lhb.aop"/>
    <aop:aspectj-autoproxy/>

    <!--&lt;!&ndash;Aop方法一&ndash;&gt;-->
    <!--<bean class="com.lhb.aop.LogAspect" id="logAspect"></bean>-->
    <!--<aop:config>-->
        <!--<aop:pointcut expression="execution(public * com.lhb.controller..*.*(..))" id="aop"/>-->
        <!--<aop:aspect id="aspect" ref="logAspect">-->
        <!--<aop:after method="doAfter" pointcut-ref="aop"/>-->
        <!--<aop:after-returning method="doAfterReturning" pointcut-ref="aop"/>-->
        <!--<aop:after-throwing method="doAfterThrowing" pointcut-ref="aop"/>-->
        <!--<aop:around method="doAround" pointcut-ref="aop"/>-->
        <!--<aop:before method="doBefore" pointcut-ref="aop"/>-->
        <!--</aop:aspect>-->
    <!--</aop:config>-->
</beans>